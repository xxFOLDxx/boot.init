# Bash configuration example
# Place this in ~/.bashrc

# Environment Variables
export EDITOR=vim
export BROWSER=firefox
export PAGER=less

# Development Environment
export PROJECTS_DIR="$HOME/projects"
export DEV_TOOLS_DIR="$HOME/.local/bin"

# Add development tools to PATH
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.npm-global/bin:$PATH"
export PATH="$HOME/go/bin:$PATH"

# Node.js configuration
export NPM_CONFIG_PREFIX="$HOME/.npm-global"

# Python configuration
export PYTHONPATH="$HOME/.local/lib/python3.11/site-packages"

# Rust configuration
export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"

# Go configuration
export GOPATH="$HOME/go"
export GOBIN="$GOPATH/bin"

# Docker configuration
export DOCKER_BUILDKIT=1

# History settings
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTCONTROL=ignoredups:erasedups
shopt -s histappend

# Common Aliases
alias ll='ls -la'
alias la='ls -A'
alias l='ls -CF'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Git aliases
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git log --oneline'
alias gd='git diff'

# Development aliases
alias serve='python3 -m http.server 8000'
alias ports='netstat -tuln'
alias myip='curl -s ipinfo.io/ip'

# System aliases
alias df='df -h'
alias du='du -h'
alias free='free -h'
alias ps='ps aux'

# Quick directory navigation
alias projects='cd $PROJECTS_DIR'
alias downloads='cd ~/Downloads'
alias docs='cd ~/Documents'

# Functions
mkcd() {
    mkdir -p "$1" && cd "$1"
}

extract() {
    case $1 in
        *.tar.bz2)   tar xjf "$1"   ;;
        *.tar.gz)    tar xzf "$1"   ;;
        *.bz2)       bunzip2 "$1"   ;;
        *.rar)       unrar x "$1"   ;;
        *.gz)        gunzip "$1"    ;;
        *.tar)       tar xf "$1"    ;;
        *.tbz2)      tar xjf "$1"   ;;
        *.tgz)       tar xzf "$1"   ;;
        *.zip)       unzip "$1"     ;;
        *.Z)         uncompress "$1";;
        *.7z)        7z x "$1"      ;;
        *)           echo "Unknown archive format: $1" ;;
    esac
}

backup() {
    if [ $# -eq 0 ]; then
        echo "Usage: backup <file_or_directory>"
        return 1
    fi
    
    backup_name="$1.backup.$(date +%Y%m%d_%H%M%S)"
    cp -r "$1" "$backup_name"
    echo "Backup created: $backup_name"
}

# Startup message
if [ -t 1 ]; then
    echo "Welcome back! System status:"
    echo "  Date: $(date)"
    echo "  Uptime: $(uptime | cut -d',' -f1 | cut -d' ' -f4-)"
    echo "  Disk: $(df -h / | tail -1 | awk '{print $3 "/" $2 " (" $5 " used)"}')"
    echo "  Load: $(cat /proc/loadavg | cut -d' ' -f1-3)"
    echo ""
fi

# Enable programmable completion features
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
